{"name": "test_checkout", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"Email\"]\"}\n  (Session info: chrome=137.0.7151.41); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x000000010f7df898 chromedriver + 5986456\n1   chromedriver                        0x000000010f7d69ca chromedriver + 5949898\n2   chromedriver                        0x000000010f28f600 chromedriver + 415232\n3   chromedriver                        0x000000010f2e1304 chromedriver + 750340\n4   chromedriver                        0x000000010f2e1521 chromedriver + 750881\n5   chromedriver                        0x000000010f331204 chromedriver + 1077764\n6   chromedriver                        0x000000010f30733d chromedriver + 906045\n7   chromedriver                        0x000000010f32e566 chromedriver + 1066342\n8   chromedriver                        0x000000010f3070e3 chromedriver + 905443\n9   chromedriver                        0x000000010f2d361d chromedriver + 693789\n10  chromedriver                        0x000000010f2d4281 chromedriver + 696961\n11  chromedriver                        0x000000010f79d560 chromedriver + 5715296\n12  chromedriver                        0x000000010f7a1425 chromedriver + 5731365\n13  chromedriver                        0x000000010f777eb0 chromedriver + 5562032\n14  chromedriver                        0x000000010f7a1e5b chromedriver + 5733979\n15  chromedriver                        0x000000010f766dc4 chromedriver + 5492164\n16  chromedriver                        0x000000010f7c4a78 chromedriver + 5876344\n17  chromedriver                        0x000000010f7c4c40 chromedriver + 5876800\n18  chromedriver                        0x000000010f7d6591 chromedriver + 5948817\n19  libsystem_pthread.dylib             0x00007ff809470df1 _pthread_start + 99\n20  libsystem_pthread.dylib             0x00007ff80946c857 thread_start + 15", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4888e4a81265862181de2f332cd2392b\")>\n\n    @pytest.mark.checkout\n    @allure.feature('Checkout')\n    @allure.story('Complete Checkout Process')\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_checkout(driver):\n        \"\"\"Test the checkout process after adding a product to the cart.\"\"\"\n        test_id = str(uuid.uuid4())\n        start_time = time.time()\n        product_name = get_product_name()\n        user = get_test_user()\n        address = get_test_address()\n    \n        try:\n            # Log test start\n            logger.log_test_start(\n                \"test_checkout\",\n                browser=driver.capabilities.get('browserName', 'unknown'),\n                test_id=test_id,\n                environment=getattr(driver, 'test_env', 'test')\n            )\n    \n            # Step 1: Navigate to login page\n            logger.log_test_step(\"Navigate to login page\", \"started\", test_id=test_id)\n            driver.get(\"https://your-ecommerce-site.com/login\")\n            logger.log_test_step(\"Navigate to login page\", \"completed\", test_id=test_id)\n    \n            # Step 2: Login\n            logger.log_test_step(\"Login\", \"started\",\n                                test_id=test_id,\n                                details={\"username\": user[\"username\"]})\n>           LoginPage(driver).login(user[\"username\"], user[\"password\"])\n\ntests/test_checkout.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/login_page.py:12: in login\n    self.driver.find_element(*self.email_input).clear()\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1121e1bb0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...7ff809470df1 _pthread_start + 99\\\\n20  libsystem_pthread.dylib             0x00007ff80946c857 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"Email\"]\"}\nE         (Session info: chrome=137.0.7151.41); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x000000010f7df898 chromedriver + 5986456\nE       1   chromedriver                        0x000000010f7d69ca chromedriver + 5949898\nE       2   chromedriver                        0x000000010f28f600 chromedriver + 415232\nE       3   chromedriver                        0x000000010f2e1304 chromedriver + 750340\nE       4   chromedriver                        0x000000010f2e1521 chromedriver + 750881\nE       5   chromedriver                        0x000000010f331204 chromedriver + 1077764\nE       6   chromedriver                        0x000000010f30733d chromedriver + 906045\nE       7   chromedriver                        0x000000010f32e566 chromedriver + 1066342\nE       8   chromedriver                        0x000000010f3070e3 chromedriver + 905443\nE       9   chromedriver                        0x000000010f2d361d chromedriver + 693789\nE       10  chromedriver                        0x000000010f2d4281 chromedriver + 696961\nE       11  chromedriver                        0x000000010f79d560 chromedriver + 5715296\nE       12  chromedriver                        0x000000010f7a1425 chromedriver + 5731365\nE       13  chromedriver                        0x000000010f777eb0 chromedriver + 5562032\nE       14  chromedriver                        0x000000010f7a1e5b chromedriver + 5733979\nE       15  chromedriver                        0x000000010f766dc4 chromedriver + 5492164\nE       16  chromedriver                        0x000000010f7c4a78 chromedriver + 5876344\nE       17  chromedriver                        0x000000010f7c4c40 chromedriver + 5876800\nE       18  chromedriver                        0x000000010f7d6591 chromedriver + 5948817\nE       19  libsystem_pthread.dylib             0x00007ff809470df1 _pthread_start + 99\nE       20  libsystem_pthread.dylib             0x00007ff80946c857 thread_start + 15\n\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException"}, "description": "Test the checkout process after adding a product to the cart.", "attachments": [{"name": "log", "source": "01468a3e-ed65-41c2-905d-971c6fd3c526-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "cce4bec2-20d0-4c76-a22c-97e8f97787e9-attachment.txt", "type": "text/plain"}], "start": 1748127831129, "stop": 1748127831499, "uuid": "6d578fe2-d410-4d4d-a0d5-a9f60e039d4f", "historyId": "a64374ec890043981abed79d34f3f500", "testCaseId": "a64374ec890043981abed79d34f3f500", "fullName": "tests.test_checkout#test_checkout", "labels": [{"name": "feature", "value": "Checkout"}, {"name": "story", "value": "Complete Checkout Process"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "checkout"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_checkout"}, {"name": "host", "value": "MacBookPro.lan"}, {"name": "thread", "value": "43252-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_checkout"}]}