{"name": "test_checkout", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001026a3898 chromedriver + 5986456\n1   chromedriver                        0x000000010269a9ca chromedriver + 5949898\n2   chromedriver                        0x0000000102153600 chromedriver + 415232\n3   chromedriver                        0x00000001021a5304 chromedriver + 750340\n4   chromedriver                        0x00000001021a5521 chromedriver + 750881\n5   chromedriver                        0x00000001021f5204 chromedriver + 1077764\n6   chromedriver                        0x00000001021cb33d chromedriver + 906045\n7   chromedriver                        0x00000001021f2566 chromedriver + 1066342\n8   chromedriver                        0x00000001021cb0e3 chromedriver + 905443\n9   chromedriver                        0x000000010219761d chromedriver + 693789\n10  chromedriver                        0x0000000102198281 chromedriver + 696961\n11  chromedriver                        0x0000000102661560 chromedriver + 5715296\n12  chromedriver                        0x0000000102665425 chromedriver + 5731365\n13  chromedriver                        0x000000010263beb0 chromedriver + 5562032\n14  chromedriver                        0x0000000102665e5b chromedriver + 5733979\n15  chromedriver                        0x000000010262adc4 chromedriver + 5492164\n16  chromedriver                        0x0000000102688a78 chromedriver + 5876344\n17  chromedriver                        0x0000000102688c40 chromedriver + 5876800\n18  chromedriver                        0x000000010269a591 chromedriver + 5948817\n19  libsystem_pthread.dylib             0x00007ff809470df1 _pthread_start + 99\n20  libsystem_pthread.dylib             0x00007ff80946c857 thread_start + 15", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"37a6341780c425c75ce44bf29d93c4c5\")>\n\n    @pytest.mark.checkout\n    @allure.feature('Checkout')\n    @allure.story('Complete Checkout Process')\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_checkout(driver):\n        \"\"\"Test the checkout process after adding a product to the cart.\"\"\"\n        test_id = str(uuid.uuid4())\n        start_time = time.time()\n        product_name = get_product_name()\n        user = get_test_user()\n        address = get_test_address()\n    \n        try:\n            # Log test start\n            logger.log_test_start(\n                \"test_checkout\",\n                browser=driver.capabilities.get('browserName', 'unknown'),\n                test_id=test_id,\n                environment=getattr(driver, 'test_env', 'test')\n            )\n    \n            # Step 1: Navigate to login page\n            logger.log_test_step(\"Navigate to login page\", \"started\", test_id=test_id)\n            driver.get(\"https://your-ecommerce-site.com/login\")\n            logger.log_test_step(\"Navigate to login page\", \"completed\", test_id=test_id)\n    \n            # Step 2: Login\n            logger.log_test_step(\"Login\", \"started\",\n                                test_id=test_id,\n                                details={\"username\": user[\"username\"]})\n>           LoginPage(driver).login(user[\"username\"], user[\"password\"])\n\ntests/test_checkout.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/login_page.py:15: in login\n    email_field = self.wait.until(EC.presence_of_element_located(self.email_input))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"37a6341780c425c75ce44bf29d93c4c5\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x11179c680>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001026a3898 chromedriver + 5986456\nE       1   chromedriver                        0x000000010269a9ca chromedriver + 5949898\nE       2   chromedriver                        0x0000000102153600 chromedriver + 415232\nE       3   chromedriver                        0x00000001021a5304 chromedriver + 750340\nE       4   chromedriver                        0x00000001021a5521 chromedriver + 750881\nE       5   chromedriver                        0x00000001021f5204 chromedriver + 1077764\nE       6   chromedriver                        0x00000001021cb33d chromedriver + 906045\nE       7   chromedriver                        0x00000001021f2566 chromedriver + 1066342\nE       8   chromedriver                        0x00000001021cb0e3 chromedriver + 905443\nE       9   chromedriver                        0x000000010219761d chromedriver + 693789\nE       10  chromedriver                        0x0000000102198281 chromedriver + 696961\nE       11  chromedriver                        0x0000000102661560 chromedriver + 5715296\nE       12  chromedriver                        0x0000000102665425 chromedriver + 5731365\nE       13  chromedriver                        0x000000010263beb0 chromedriver + 5562032\nE       14  chromedriver                        0x0000000102665e5b chromedriver + 5733979\nE       15  chromedriver                        0x000000010262adc4 chromedriver + 5492164\nE       16  chromedriver                        0x0000000102688a78 chromedriver + 5876344\nE       17  chromedriver                        0x0000000102688c40 chromedriver + 5876800\nE       18  chromedriver                        0x000000010269a591 chromedriver + 5948817\nE       19  libsystem_pthread.dylib             0x00007ff809470df1 _pthread_start + 99\nE       20  libsystem_pthread.dylib             0x00007ff80946c857 thread_start + 15\n\nvenv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException"}, "description": "Test the checkout process after adding a product to the cart.", "attachments": [{"name": "log", "source": "4cb7d04f-1dca-4f41-a646-b97cb2d39116-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "c0ff731a-aaed-4a95-bd93-eb57edce814d-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "32ab2dab-d24f-4ff9-8353-dc2d4772b4b8-attachment.txt", "type": "text/plain"}], "start": 1748127977845, "stop": 1748127988572, "uuid": "f79f4edf-ff59-41af-819d-1afce65be61e", "historyId": "a64374ec890043981abed79d34f3f500", "testCaseId": "a64374ec890043981abed79d34f3f500", "fullName": "tests.test_checkout#test_checkout", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Checkout"}, {"name": "story", "value": "Complete Checkout Process"}, {"name": "tag", "value": "checkout"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_checkout"}, {"name": "host", "value": "MacBookPro.lan"}, {"name": "thread", "value": "44308-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_checkout"}]}